---
name: Build and publish a 🛢️ container

on:
  push:
    branches:
      - 'main'
    tags:
      - '*'
  workflow_dispatch:

# jobs:
#   setup-matrix:
#     runs-on: ubuntu-latest
#     outputs:
#       matrix: ${{ steps.set-matrix.outputs.matrix }}
#     steps:
#       - name: Source checkout
#         uses: actions/checkout@v4

#       - id: set-matrix
#         run: echo "matrix=$(jq -c . build_versions.json)" >> $GITHUB_OUTPUT

#   build-and-push-container:
#     runs-on: ubuntu-latest
#     permissions:
#       contents: read
#       packages: write
#     needs: setup-matrix
#     strategy:
#       matrix: ${{ fromJson(needs.setup-matrix.outputs.matrix) }}
#     steps:
#       - name: Build Vox Pupuli Test Container r${{ matrix.puppet_release }}
#         uses: voxpupuli/gha-build-and-publish-a-container@v2
#         with:
#           registry_password: ${{ secrets.GITHUB_TOKEN }}
#           build_args: |
#             BASE_IMAGE=${{ matrix.base_image }}
#           build_arch: linux/amd64,linux/arm64
#           docker_username: voxpupulibot
#           docker_password: ${{ secrets.DOCKERHUB_BOT_PASSWORD }}
#           tags: |
#             ghcr.io/voxpupuli/test:${{ matrix.puppet_release }}-${{ github.ref_name }}
#             ghcr.io/voxpupuli/test:${{ matrix.puppet_release }}
#             ghcr.io/voxpupuli/test:latest
#             docker.io/voxpupuli/test:${{ matrix.puppet_release }}-${{ github.ref_name }}
#             docker.io/voxpupuli/test:${{ matrix.puppet_release }}
#             docker.io/voxpupuli/test:latest

#       - name: Update Docker Hub Description
#         uses: peter-evans/dockerhub-description@v4
#         with:
#           username: voxpupulibot
#           password: ${{ secrets.DOCKERHUB_BOT_PASSWORD }}
#           repository: voxpupuli/test


jobs:
  setup-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Source checkout
        uses: actions/checkout@v4

      - name: 'Setup yq'
        uses: dcarbone/install-yq-action@v1.3.1

      - id: set-matrix
        run: echo "matrix=$(yq -o json build_versions.yaml | jq -c)" >> $GITHUB_OUTPUT

  build-and-push-container:
    runs-on: ${{ matrix.builder }}

    strategy:
      matrix:
        include:
          - builder: ubuntu-24.04
            platform: amd64
          - builder: ubuntu-24.04-arm
            platform: arm64

    steps:
      - name: Checkout Code
        uses: actions/checkout@v1

      # - name: Set up QEMU
      #   uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ github.token }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v6
        with:
          file: Dockerfile
          push: true
          platforms: linux/${{ matrix.platform }}
          tags: |
            ghcr.io/${{ github.repository_owner }}/test:${{ github.sha }}-${{ matrix.platform }}

  create-multiarch-manifests:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    needs:
      - build-and-push-container
    steps:
      - name: Log in to the ghcr.io registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Log in to the docker.io registry
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: voxpupulibot
          password: ${{ secrets.DOCKERHUB_BOT_PASSWORD }}

      - name: Create multiarch manifests
        run: |
          docker buildx imagetools create -t ghcr.io/${{ github.repository_owner }}/test:latest \
            ghcr.io/${{ github.repository_owner }}/test:${{ github.sha }}-amd64 \
            ghcr.io/${{ github.repository_owner }}/test:${{ github.sha }}-arm64

          docker buildx imagetools create -t docker.io/${{ github.repository_owner }}/test:latest \
            ghcr.io/${{ github.repository_owner }}/test:${{ github.sha }}-amd64 \
            ghcr.io/${{ github.repository_owner }}/test:${{ github.sha }}-arm64
