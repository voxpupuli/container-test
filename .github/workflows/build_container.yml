---
name: Build and publish a 🛢️ container

on:
  push:
    branches:
      - 'main'
    tags:
      - '*'
  workflow_dispatch:

jobs:
  setup-matrix:
    runs-on: ubuntu-latest
    outputs:
      build_matrix: ${{ steps.set-build-matrix.outputs.build_matrix }}
      tag_matrix: ${{ steps.set-tag-matrix.outputs.tag_matrix }}
    steps:
      - name: Source checkout
        uses: actions/checkout@v5

      - name: 'Setup yq'
        uses: dcarbone/install-yq-action@v1.3.1

        # creates a matrix of the form build_versions and build_platforms
        # so if you got 2 versions and 2 platforms, you will get 4 builds
      - id: set-build-matrix
        run: echo "build_matrix=$(bash matrix.sh build)" >> $GITHUB_OUTPUT

        # creates a subset from the build matrix to be used for tagging
        # so if you got 2 versions you will get 2 tags
      - id: set-tag-matrix
        run: echo "tag_matrix=$(bash matrix.sh tag)" >> $GITHUB_OUTPUT

  build-and-push-container:
    runs-on: ${{ matrix.runner }}
    permissions:
      contents: read
      packages: write
    needs: setup-matrix
    strategy:
      matrix: ${{ fromJson(needs.setup-matrix.outputs.build_matrix) }}
    steps:
      - name: Build Vox Pupuli Test Container v${{ matrix.puppet_release }}
        uses: voxpupuli/gha-build-and-publish-a-container@v2
        with:
          registry_password: ${{ secrets.GITHUB_TOKEN }}
          build_args: |
            BASE_IMAGE=${{ matrix.base_image }}
          build_arch: linux/${{ matrix.platform }}
          docker_username: voxpupulibot
          docker_password: ${{ secrets.DOCKERHUB_BOT_ADMIN_TOKEN }}
          tags: |
            ghcr.io/${{ github.repository_owner }}/test:${{ github.sha }}-v${{ matrix.puppet_release }}-${{ matrix.platform }}

  create-multiarch-manifests:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    needs:
      - setup-matrix
      - build-and-push-container
    strategy:
      matrix: ${{ fromJson(needs.setup-matrix.outputs.build_matrix) }}
    steps:
      - name: Log in to the ghcr.io registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Log in to the docker.io registry
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: voxpupulibot
          password: ${{ secrets.DOCKERHUB_BOT_ADMIN_TOKEN }}

      - name: Create multiarch manifests
        run: |
          docker buildx imagetools create -t ghcr.io/${{ github.repository_owner }}/test:v${{ matrix.puppet_release }}-latest \
            ghcr.io/${{ github.repository_owner }}/test:${{ github.sha }}-v${{ matrix.puppet_release }}-amd64 \
            ghcr.io/${{ github.repository_owner }}/test:${{ github.sha }}-v${{ matrix.puppet_release }}-arm64

          docker buildx imagetools create -t docker.io/${{ github.repository_owner }}/test:v${{ matrix.puppet_release }}-latest \
            ghcr.io/${{ github.repository_owner }}/test:${{ github.sha }}-v${{ matrix.puppet_release }}-amd64 \
            ghcr.io/${{ github.repository_owner }}/test:${{ github.sha }}-v${{ matrix.puppet_release }}-arm64

  update-dockerhub-description:
    runs-on: ubuntu-latest
    needs:
      - create-multiarch-manifests
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Update Docker Hub Description
        uses: peter-evans/dockerhub-description@v4
        with:
          username: voxpupulibot
          password: ${{ secrets.DOCKERHUB_BOT_ADMIN_TOKEN }}
          repository: voxpupuli/test
